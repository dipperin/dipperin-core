language: go
go:
  - 1.x

dist: xenial

cache: false #不使用cache
#cache: ccache

notifications:
  email: false

sudo: required # 使用容器进行编译，速度更快

addons:
  sonarcloud:
    organization: "$SONAR_ORG"
    token:
      secure: "$SONAR_TOKEN_dev"

services:
  - docker

git:
  submodules: false # 不运行 git submodules 命令

#耗时,放到编译时的makefile中处理
before_install:
 # - docker pull karalabe/xgo-latest
 # - docker ps -a
 # - go get github.com/karalabe/xgo

install: true # 跳过 install 阶段，因为我已经定义了 before_install。其实 go 项目是需要安装依赖的，只是我放到了下面的 make mycli 命令中做

script:
  #- make travis-test # 运行测试
  - go test -p 1 ./...
#script: make compile

after_script:
  - go test -p 1 -cover ./... -coverprofile=coverage.out
  - sonar-scanner


deploy:
  - provider: script
    script: bash cs.sh compile
    on:
      repo: dipperin/dipperin-core
      branch: master
      tags: true   #git tag 时发布


  - provider: releases
    api_key:
      secure: T6E/9a2nPxG4d4DKRGYh+GkeMZLLjdXwQ77DsLvaOYc0x6OgfNequcK6+CVGuO4N9UFOmRH54VJGwGq/ZVBtTpyLudQaaEJemG5bPFCkGtYJkmBDYGypPNYP1zKvGZtys7Fhqu2gWi4NVWvhK/laxwSk4K3K4sHCDONZ6y+7hcqEAA/hu023Eo+fYB+y2V7ERwAEYOlj7zZCab/uE1r0e6QMsk642Japd8mtT+iNXD9uR/VhpKRP+b1PjjRQ8aDhmxiUmMqZBN7OLWc3F3v7LAudO5WTqmdurN5FQ8wdFDF2NgzUWafxd/1zPHqj+/r8BujT3LDuDcEPmYZ5mjHnSqaak3LIrQWHtZsMv0Zo4ZajVYiIinrFjVuo542rn2L7S2+aefX+9LmM+u/uqAHWRZXNLRaEHqC8/AjseyKLhF44xTd9RpF29zTP7/snOkOcgc1afpBqcgUwUpu46P+nhs+oCO2xtMQC5PHchUwVgLopd+GjnxYhNRy3gQn6ir8S2DbJtpH432O0sHV8bAmce6AWxmoM3feXlvKUirI0o+nJM7ejetdR40qdA3FKZa8MYDEW5oHIo0Yjbl0VawnhVY7GeAZZTcdWpLPLWW7XV5BjKOx/eVAIXQcNruW4wTRjd8lLy261NBZ0Zr5/jWyFlyZ3Y540rDApJrq8mf5onNc=

    file:
      - "./cmd/dipperin/dipperin-linux-amd64"
      - "./cmd/dipperin/dipperin-windows-4.0-amd64.exe"
      - "./cmd/dipperin/dipperin-darwin-10.6-amd64"
    skip_cleanup: true # 因为要上传可执行文件到 release，所以不能自动把这个文件清除
    on:
      repo: dipperin/dipperin-core
      branch: master
      tags: true   #git tag 时发布


