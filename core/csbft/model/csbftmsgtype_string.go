// Copyright 2019, Keychain Foundation Ltd.
// This file is part of the dipperin-core library.
//
// The dipperin-core library is free software: you can redistribute
// it and/or modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The dipperin-core library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by "stringer -type=CsBftMsgType"; DO NOT EDIT.

package model

import "strconv"

const (
	_CsBftMsgType_name_0 = "TypeOfNewRoundMsgTypeOfProposalMsgTypeOfPreVoteMsgTypeOfVoteMsg"
	_CsBftMsgType_name_1 = "TypeOfFetchBlockReqMsgTypeOfFetchBlockRespMsgTypeOfSyncBlockMsg"
)

var (
	_CsBftMsgType_index_0 = [...]uint8{0, 17, 34, 50, 63}
	_CsBftMsgType_index_1 = [...]uint8{0, 22, 45, 63}
)

func (i CsBftMsgType) String() string {
	switch {
	case 1 <= i && i <= 4:
		i -= 1
		return _CsBftMsgType_name_0[_CsBftMsgType_index_0[i]:_CsBftMsgType_index_0[i+1]]
	case 10 <= i && i <= 12:
		i -= 10
		return _CsBftMsgType_name_1[_CsBftMsgType_index_1[i]:_CsBftMsgType_index_1[i+1]]
	default:
		return "CsBftMsgType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
