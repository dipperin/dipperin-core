// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dipperin/dipperin-core/core/economy-model (interfaces: EconomyModel)

// Package verifiers_halt_check is a generated GoMock package.
package verifiers_halt_check

import (
	common "github.com/dipperin/dipperin-core/common"
	economy_model "github.com/dipperin/dipperin-core/core/economy-model"
	model "github.com/dipperin/dipperin-core/core/model"
	gomock "github.com/golang/mock/gomock"
	big "math/big"
	reflect "reflect"
)

// MockEconomyModel is a mock of EconomyModel interface
type MockEconomyModel struct {
	ctrl     *gomock.Controller
	recorder *MockEconomyModelMockRecorder
}

// MockEconomyModelMockRecorder is the mock recorder for MockEconomyModel
type MockEconomyModelMockRecorder struct {
	mock *MockEconomyModel
}

// NewMockEconomyModel creates a new mock instance
func NewMockEconomyModel(ctrl *gomock.Controller) *MockEconomyModel {
	mock := &MockEconomyModel{ctrl: ctrl}
	mock.recorder = &MockEconomyModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEconomyModel) EXPECT() *MockEconomyModelMockRecorder {
	return m.recorder
}

// CheckAddressType mocks base method
func (m *MockEconomyModel) CheckAddressType(arg0 common.Address) economy_model.EconomyModelAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAddressType", arg0)
	ret0, _ := ret[0].(economy_model.EconomyModelAddress)
	return ret0
}

// CheckAddressType indicates an expected call of CheckAddressType
func (mr *MockEconomyModelMockRecorder) CheckAddressType(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAddressType", reflect.TypeOf((*MockEconomyModel)(nil).CheckAddressType), arg0)
}

// GetAddressLockMoney mocks base method
func (m *MockEconomyModel) GetAddressLockMoney(arg0 common.Address, arg1 uint64) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddressLockMoney", arg0, arg1)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAddressLockMoney indicates an expected call of GetAddressLockMoney
func (mr *MockEconomyModelMockRecorder) GetAddressLockMoney(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddressLockMoney", reflect.TypeOf((*MockEconomyModel)(nil).GetAddressLockMoney), arg0, arg1)
}

// GetBlockYear mocks base method
func (m *MockEconomyModel) GetBlockYear(arg0 uint64) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockYear", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockYear indicates an expected call of GetBlockYear
func (mr *MockEconomyModelMockRecorder) GetBlockYear(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockYear", reflect.TypeOf((*MockEconomyModel)(nil).GetBlockYear), arg0)
}

// GetDeveloperInitBalance mocks base method
func (m *MockEconomyModel) GetDeveloperInitBalance() map[common.Address]*big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeveloperInitBalance")
	ret0, _ := ret[0].(map[common.Address]*big.Int)
	return ret0
}

// GetDeveloperInitBalance indicates an expected call of GetDeveloperInitBalance
func (mr *MockEconomyModelMockRecorder) GetDeveloperInitBalance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeveloperInitBalance", reflect.TypeOf((*MockEconomyModel)(nil).GetDeveloperInitBalance))
}

// GetDeveloperLockDIP mocks base method
func (m *MockEconomyModel) GetDeveloperLockDIP(arg0 common.Address, arg1 uint64) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeveloperLockDIP", arg0, arg1)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeveloperLockDIP indicates an expected call of GetDeveloperLockDIP
func (mr *MockEconomyModelMockRecorder) GetDeveloperLockDIP(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeveloperLockDIP", reflect.TypeOf((*MockEconomyModel)(nil).GetDeveloperLockDIP), arg0, arg1)
}

// GetDiffVerifierAddress mocks base method
func (m *MockEconomyModel) GetDiffVerifierAddress(arg0, arg1 model.AbstractBlock) (map[economy_model.VerifierType][]common.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiffVerifierAddress", arg0, arg1)
	ret0, _ := ret[0].(map[economy_model.VerifierType][]common.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiffVerifierAddress indicates an expected call of GetDiffVerifierAddress
func (mr *MockEconomyModelMockRecorder) GetDiffVerifierAddress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiffVerifierAddress", reflect.TypeOf((*MockEconomyModel)(nil).GetDiffVerifierAddress), arg0, arg1)
}

// GetFoundation mocks base method
func (m *MockEconomyModel) GetFoundation() economy_model.Foundation {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFoundation")
	ret0, _ := ret[0].(economy_model.Foundation)
	return ret0
}

// GetFoundation indicates an expected call of GetFoundation
func (mr *MockEconomyModelMockRecorder) GetFoundation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFoundation", reflect.TypeOf((*MockEconomyModel)(nil).GetFoundation))
}

// GetInvestorInitBalance mocks base method
func (m *MockEconomyModel) GetInvestorInitBalance() map[common.Address]*big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvestorInitBalance")
	ret0, _ := ret[0].(map[common.Address]*big.Int)
	return ret0
}

// GetInvestorInitBalance indicates an expected call of GetInvestorInitBalance
func (mr *MockEconomyModelMockRecorder) GetInvestorInitBalance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvestorInitBalance", reflect.TypeOf((*MockEconomyModel)(nil).GetInvestorInitBalance))
}

// GetInvestorLockDIP mocks base method
func (m *MockEconomyModel) GetInvestorLockDIP(arg0 common.Address, arg1 uint64) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvestorLockDIP", arg0, arg1)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInvestorLockDIP indicates an expected call of GetInvestorLockDIP
func (mr *MockEconomyModelMockRecorder) GetInvestorLockDIP(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvestorLockDIP", reflect.TypeOf((*MockEconomyModel)(nil).GetInvestorLockDIP), arg0, arg1)
}

// GetMineMasterDIPReward mocks base method
func (m *MockEconomyModel) GetMineMasterDIPReward(arg0 model.AbstractBlock) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMineMasterDIPReward", arg0)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMineMasterDIPReward indicates an expected call of GetMineMasterDIPReward
func (mr *MockEconomyModelMockRecorder) GetMineMasterDIPReward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMineMasterDIPReward", reflect.TypeOf((*MockEconomyModel)(nil).GetMineMasterDIPReward), arg0)
}

// GetOneBlockTotalDIPReward mocks base method
func (m *MockEconomyModel) GetOneBlockTotalDIPReward(arg0 uint64) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOneBlockTotalDIPReward", arg0)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOneBlockTotalDIPReward indicates an expected call of GetOneBlockTotalDIPReward
func (mr *MockEconomyModelMockRecorder) GetOneBlockTotalDIPReward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOneBlockTotalDIPReward", reflect.TypeOf((*MockEconomyModel)(nil).GetOneBlockTotalDIPReward), arg0)
}

// GetVerifierDIPReward mocks base method
func (m *MockEconomyModel) GetVerifierDIPReward(arg0 model.AbstractBlock) (map[economy_model.VerifierType]*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerifierDIPReward", arg0)
	ret0, _ := ret[0].(map[economy_model.VerifierType]*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerifierDIPReward indicates an expected call of GetVerifierDIPReward
func (mr *MockEconomyModelMockRecorder) GetVerifierDIPReward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerifierDIPReward", reflect.TypeOf((*MockEconomyModel)(nil).GetVerifierDIPReward), arg0)
}
