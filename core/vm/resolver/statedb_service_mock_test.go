// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dipperin/dipperin-core/core/vm/resolver (interfaces: StateDBService)

// Package resolver is a generated GoMock package.
package resolver

import (
	common "github.com/dipperin/dipperin-core/common"
	model "github.com/dipperin/dipperin-core/core/model"
	gomock "github.com/golang/mock/gomock"
	big "math/big"
	reflect "reflect"
)

// MockStateDBService is a mock of StateDBService interface
type MockStateDBService struct {
	ctrl     *gomock.Controller
	recorder *MockStateDBServiceMockRecorder
}

// MockStateDBServiceMockRecorder is the mock recorder for MockStateDBService
type MockStateDBServiceMockRecorder struct {
	mock *MockStateDBService
}

// NewMockStateDBService creates a new mock instance
func NewMockStateDBService(ctrl *gomock.Controller) *MockStateDBService {
	mock := &MockStateDBService{ctrl: ctrl}
	mock.recorder = &MockStateDBServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStateDBService) EXPECT() *MockStateDBServiceMockRecorder {
	return m.recorder
}

// AddLog mocks base method
func (m *MockStateDBService) AddLog(arg0 *model.Log) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddLog", arg0)
}

// AddLog indicates an expected call of AddLog
func (mr *MockStateDBServiceMockRecorder) AddLog(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLog", reflect.TypeOf((*MockStateDBService)(nil).AddLog), arg0)
}

// GetBalance mocks base method
func (m *MockStateDBService) GetBalance(arg0 common.Address) *big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0)
	ret0, _ := ret[0].(*big.Int)
	return ret0
}

// GetBalance indicates an expected call of GetBalance
func (mr *MockStateDBServiceMockRecorder) GetBalance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockStateDBService)(nil).GetBalance), arg0)
}

// GetNonce mocks base method
func (m *MockStateDBService) GetNonce(arg0 common.Address) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNonce", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNonce indicates an expected call of GetNonce
func (mr *MockStateDBServiceMockRecorder) GetNonce(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNonce", reflect.TypeOf((*MockStateDBService)(nil).GetNonce), arg0)
}

// GetState mocks base method
func (m *MockStateDBService) GetState(arg0 common.Address, arg1 []byte) []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetState", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// GetState indicates an expected call of GetState
func (mr *MockStateDBServiceMockRecorder) GetState(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetState", reflect.TypeOf((*MockStateDBService)(nil).GetState), arg0, arg1)
}

// SetState mocks base method
func (m *MockStateDBService) SetState(arg0 common.Address, arg1, arg2 []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetState", arg0, arg1, arg2)
}

// SetState indicates an expected call of SetState
func (mr *MockStateDBServiceMockRecorder) SetState(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetState", reflect.TypeOf((*MockStateDBService)(nil).SetState), arg0, arg1, arg2)
}
