// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dipperin/dipperin-core/core/accounts/accountsbase (interfaces: AddressInfoReader)

// Package softwallet is a generated GoMock package.
package softwallet

import (
	common "github.com/dipperin/dipperin-core/common"
	gomock "github.com/golang/mock/gomock"
	big "math/big"
	reflect "reflect"
)

// MockAddressInfoReader is a mock of AddressInfoReader interface
type MockAddressInfoReader struct {
	ctrl     *gomock.Controller
	recorder *MockAddressInfoReaderMockRecorder
}

// MockAddressInfoReaderMockRecorder is the mock recorder for MockAddressInfoReader
type MockAddressInfoReaderMockRecorder struct {
	mock *MockAddressInfoReader
}

// NewMockAddressInfoReader creates a new mock instance
func NewMockAddressInfoReader(ctrl *gomock.Controller) *MockAddressInfoReader {
	mock := &MockAddressInfoReader{ctrl: ctrl}
	mock.recorder = &MockAddressInfoReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAddressInfoReader) EXPECT() *MockAddressInfoReaderMockRecorder {
	return m.recorder
}

// CurrentBalance mocks base method
func (m *MockAddressInfoReader) CurrentBalance(arg0 common.Address) *big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentBalance", arg0)
	ret0, _ := ret[0].(*big.Int)
	return ret0
}

// CurrentBalance indicates an expected call of CurrentBalance
func (mr *MockAddressInfoReaderMockRecorder) CurrentBalance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentBalance", reflect.TypeOf((*MockAddressInfoReader)(nil).CurrentBalance), arg0)
}

// GetTransactionNonce mocks base method
func (m *MockAddressInfoReader) GetTransactionNonce(arg0 common.Address) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionNonce", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionNonce indicates an expected call of GetTransactionNonce
func (mr *MockAddressInfoReaderMockRecorder) GetTransactionNonce(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionNonce", reflect.TypeOf((*MockAddressInfoReader)(nil).GetTransactionNonce), arg0)
}
